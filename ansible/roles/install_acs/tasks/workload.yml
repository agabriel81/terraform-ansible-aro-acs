        # install Central

        - name: Create Central Namespace
          kubernetes.core.k8s:
            state: present
            api_version: v1
            kind: Namespace
            name: stackrox
          register: r_k8s
          until: r_k8s is successful
          retries: 30
          delay: 5

        - name: Create Secret for Central admin password
          kubernetes.core.k8s:
            state: present
            definition:
              apiVersion: v1
              kind: Secret
              metadata:
                name: acs-password
                namespace: stackrox
              data:
                password: "{{ ocp4_workload_rhacs_central_admin_password | b64encode }}"
              type: Opaque
          register: r_k8s
          until: r_k8s is successful
          retries: 30
          delay: 5

        - name: Create Central via CR
          kubernetes.core.k8s:
            state: present
            definition: "{{ lookup('template', 'central.yaml.j2') | from_yaml }}"
          register: r_k8s
          until: r_k8s is successful
          retries: 30
          delay: 5

        - name: Get Central route
          kubernetes.core.k8s_info:
            kind: Route
            api_version: route.openshift.io/v1
            namespace: stackrox
            name: central
          register: r_stackrox_central_route
          retries: 10
          delay: 20
          until:
            - r_stackrox_central_route.resources[0].spec.host is defined

        - name: Store central route as a fact
          ansible.builtin.set_fact:
            # yamllint disable-line rule:line-length
            f_stackrox_central_addr: "{{ r_stackrox_central_route.resources[0].spec.host }}"

        - name: Wait for Central availability
          ansible.builtin.uri:
            url: "https://{{ f_stackrox_central_addr }}/v1/ping"
            method: GET
            user: admin
            password: "{{ ocp4_workload_rhacs_central_admin_password }}"
            force_basic_auth: true
            validate_certs: false
          register: result
          until: result.status == 200
          retries: 30
          delay: 20

        - name: Fix Route to Central
          when: ocp4_workload_rhacs_enable_route_certs | bool
          block:

            - name: Get CA cert value from Central
              kubernetes.core.k8s_info:
                kind: Secret
                name: central-tls
                namespace: stackrox
              register: _r_central_ca_cert

            - name: Update Route central with reencrypt and CA Cert from Central
              kubernetes.core.k8s_json_patch:
                kind: Route
                api_version: route.openshift.io/v1
                namespace: stackrox
                name: central
                patch:
                  - op: replace
                    path: /spec/tls/termination
                    value: "reencrypt"
                  - op: add
                    path: /spec/tls/destinationCACertificate
                    value: "{{ _r_central_ca_cert.resources[0].data['ca.pem'] | b64decode }}"

        # ACS Secured Cluster Installation
        - name: Get cluster init bundle
          ansible.builtin.uri:
            url: "https://{{ f_stackrox_central_addr }}/v1/cluster-init/init-bundles"
            # random name for init-bundle
            body: "{ \"name\": \"prod-{{ lookup('password', '/dev/null chars=ascii_lowercase,digits length=8') }}\"}"
            method: POST
            user: admin
            password: "{{ ocp4_workload_rhacs_central_admin_password }}"
            body_format: json
            force_basic_auth: true
            validate_certs: false
          register: r_stackrox_cluster_init_response

        - name: Store cluster init bundle as a fact
          ansible.builtin.set_fact:
            f_stackrox_bundle: "{{ r_stackrox_cluster_init_response.json.kubectlBundle | b64decode }}"

        - name: Create init-bundle secrets
          kubernetes.core.k8s:
            namespace: stackrox
            state: present
            definition: "{{ f_stackrox_bundle }}"
          register: r_k8s
          until: r_k8s is successful
          retries: 30
          delay: 5

        - name: Create SecuredCluster via CR
          kubernetes.core.k8s:
            state: present
            definition: "{{ lookup('template', 'securedcluster.yaml.j2') | from_yaml }}"
          register: r_k8s
          until: r_k8s is successful
          retries: 30
          delay: 5

        - name: Wait for ready sensor
          kubernetes.core.k8s_info:
            name: sensor
            kind: Deployment
            api_version: apps/v1
            namespace: stackrox
          register: r_stackrox_sensor_deployment
          until:
            - r_stackrox_sensor_deployment.resources[0].status.readyReplicas is defined
            - r_stackrox_sensor_deployment.resources[0].status.readyReplicas | int >= 1
          delay: 20
          retries: 15

        # Verify ACS is working
        - name: Get the ACS portal route
          kubernetes.core.k8s_info:
            api_version: route.openshift.io/v1
            kind: Route
            name: central
            namespace: stackrox
          register: r_acs_portal_route
          until: r_acs_portal_route is successful
          retries: 30
          delay: 5
       
        - name: Print info
          ansible.builtin.debug:
            msg:
            - ""
            - "Your RHACS console is available at:"
            - "https://{{ r_acs_portal_route.resources[0].spec.host }}"
            - "RHACS portal username: admin"
            - "RHACS portal password: {{ ocp4_workload_rhacs_central_admin_password }}"
